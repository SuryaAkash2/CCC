"""
You are given a matrix A of size NxN. Every cell has a value A[i][j] associated with it. 
Johny is standing currently at position (1,1) and he intends to get to cell (N,N).
The cost of going from cell (i,j) to cell(x,y) is A[i][j] * A[x][y].
Johny can either decided to travel in a row-major order or in a column-major order.
Your task is to find out which method will cost him less. Print "row-major" or "column-major" accordingly.

Input
First line contains an integer N
Next N lines each contain N integers each denoting the value of the array A[][]

Output
Print either "row-major" or "column-major". If both ways cost the same then print "row-major".

Sample Input 0
2
1 2
3 4
Sample Output 0
column-major
Explanation 0
row major cost = 1x2 + 2x3 + 3x4 = 2 + 6 + 12 = 20
col major cost = 1x3 + 3x2 + 2x4 = 3 + 6 + 8 = 17
Hence the answer is column-major
_____________________________________"""
n=int(input())
a=list()
row=0             
col=0
for i in range(n):
    x=list(map(int,input().split()))
    a.append(x)
for i in range(n):
    for j in range(n-1):
        row+=a[i][j]*a[i][j+1]
for i in range(n-1):
    row+=a[i][-1]*a[i+1][0] 
for i in range(n):
    for j in range(n-1):
        col+=a[j][i]*a[j+1][i]
for i in range(n-1):
    col+=a[n-1][i]*a[0][i+1]
if(row<col):
    print('row-major')
else:
    print('column-major')
 
